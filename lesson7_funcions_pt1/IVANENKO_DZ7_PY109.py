import math
import random
import sys


# Задание 1
# Создайте функцию, которая будет считать сумму чисел в массиве.
def count_list_sum():
    sum_ = 0
    list_ = [1, 3, 4, 6, 7, 7, 8]
    for i in list_:  # для каждого элемента i  в списке
        sum_ += i  # прибавить i к переменной суммы
    print(sum_)


#############################################################

count_list_sum()  # вызов функции

# Задание 2
# Написать функцию is_year_leap, принимающую 1 аргумент — год, и возвращающую True, если год високосный, и False иначе.

"""В високосном годе 366 дней, в обычном 365.
- Если год не делится на 4, значит он обычный.
- Иначе надо проверить не делится ли год на 100.
- Если не делится, значит это не столетие и можно сделать вывод, что год високосный.
- Если делится на 100, значит это столетие и его следует проверить его делимость на 400.
- Если год делится на 400, то он високосный.
- Иначе год обычный."""


def is_year_leap(year):
    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:  #
        return True
    else:
        return False


print(is_year_leap(int(input("Введите год и узнайте, високосный ли он: "))))  # вывести в консоль результат


# функции is_year_leap, значение года в которой будет приведено к целочисленному

#############################################################

# Задание 3
# Написать функцию square, принимающую 1 аргумент — сторону квадрата, и возвращающую 3 значения (с помощью кортежа):
# периметр квадрата, площадь квадрата и диагональ квадрата. Сторону квадрата вводить с клавиатуры.
def square(square_side):
    perimeter = square_side * 4
    s = square_side ** 2
    diagonal = math.sqrt(
        2) * square_side  # По теореме Пифагора диагональ квадрата будет равна сумме квадратов его сторон.

    return perimeter, s, diagonal


print(square(int(input("Введите сторону квадрата: "))))


#############################################################

# Задание 4
# Написать функцию season, принимающую 1 аргумент — номер месяца (от 1 до 12),
# и возвращающую время года, которому этот месяц принадлежит (зима, весна, лето или осень). Номер месяца вводить с клавиатуры.
def season(month_no):
    if month_no in (1, 2, 12):
        print("Зима")
    elif month_no in (3, 4, 5):
        print("Весна")
    elif month_no in (6, 7, 8):
        print("Лето")
    elif month_no in (9, 10, 11):
        print("Осень")


print(season(int(input("Введите номер месяца: "))))


#############################################################

# Задание 5
# Написать функцию is_prime, принимающую 1 аргумент — число от 0 до 1000,
# и возвращающую True, если оно простое, и False - иначе.

# Простое число — это натуральное число больше 1, у которого есть всего два делителя:
# единица и само число. Например: 11, 13, 17, 19 — список простых чисел.

def is_prime(num):
    d = 2  # делитель = 2
    while num % d != 0:  # пока введенное число делится на два с остатком, к делителю прибавляется +1
        d += 1
    return d == num  # возвращать True, если число будет равно делителю


num = int(input("Введите число: "))
print(is_prime(num))

#############################################################

# Задание 6
# Функция, вычисляющая среднее арифметическое элементов массива. Массив должен состоять из случайных чисел, длиной 10 элементов.
list_ = [random.randint(1, 20) for i in range(10)]
print(f"Случайный список: {list_}")


def avg(list_):
    total_sum = 0
    for i in list_:
        total_sum += i
    print("Среднее арифметическое списка: ",
          total_sum / len(list_))  # полученную сумму поделить на количество элементов в списке.


avg(list_)


#############################################################

# Домашнее задание 1 - Калькулятор


def add(num1, num2):
    if operation == "+":
        return float(num1 + num2)


def subtract(num1, num2):
    if operation == "-":
        return float(num1 - num2)


def multiply(num1, num2):
    if operation == "*":
        return float(num1 * num2)


def divide(num1, num2):
    if operation == "/":  # если операция = "/", временно пропустить операцию, чтобы проверить еще и деление на ноль
        pass
        if num2 == 0:
            print("Деление на 0!")
            sys.exit()
        return float(num1 / num2)  # если деления на ноль не было, выполнить деление


while True:
    num1 = float(input("Введите число 1: "))
    operation = input("Введите операцию (+, -, *, / ): ")
    num2 = float(input("Введите число 2: "))
    # проверка на конкретную сработавшую функцию, которая зависит от операции
    if add(num1, num2):
        print(num1 + num2)
    elif subtract(num1, num2):
        print(num1 - num2)
    elif multiply(num1, num2):
        print(num1 * num2)
    elif divide(num1, num2):
        print(num1 / num2)




# второй вариант
# def add(a, b):
#     return a + b
#
#
# def subtract(a, b):
#     return a - b
#
#
# def multipy(a, b):
#     return a * b
#
#
# def divide(a, b):
#     return a / b
#
#
# while True:
#     a = int(input("Введите число 1: "))
#     operation = input("Введите операцию: ")
#     b = int(input("Введите число 2: "))
#     if a == 0 or b == 0:
#         break
#     else:
#         if operation == "+":
#             print(add(a, b))
#         elif operation == "-":
#             print(subtract(a, b))
#         elif operation == "*":
#             print(multipy(a, b))
#         elif operation == "/":
#             print(divide(a, b))