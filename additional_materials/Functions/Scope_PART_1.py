print('Тема область видимости')
"""
Вы, наверное, не раз слышали термин область видимости, когда изучали программирование. 
Это весьма важная тема, незнание которой может привести к достаточно запутанным ошибкам. 
Область видимости указывает интерпретатору, когда наименование (или переменная) видимо. 
Другими словами, область видимости определяет, когда и где вы можете использовать 
свои переменные, функции, и т.д. Если вы попытаетесь использовать что-либо, 
что не является в вашей области видимости, вы получите ошибку NameError.

Пайтон содержит три разных типа области видимости:
1. Локальная область видимости
2. Глобальная область видимости
3. Нелокальная область видимости (добавлена в Python 3)
"""

# Локальная область видимости
"""
Локальная область видимости наиболее часто используется в Python. Когда мы создаем переменную в блоке кода, 
она будет разрешена при помощи ближайшей области видимости, или областей. Группирование всех этих областей известно как 
среда блоков кода. Другими словами, все назначения выполняются в локальной области по умолчанию. 
Если вам нужно что-то другое, тогда вам нужно настроить свою переменную на глобальную или нелокальную область, 
которые мы рассмотрим немного позже. Сейчас мы создадим простой пример, 
используя интерпретатор Python, в котором демонстрируется назначение локальной области видимости.
"""

x = 10  # глобальная область видимости


def my_func(a, b):
    print(x)  # вызов x из функции возможен, т.к. переменная x - является глобальной
    z = 2  # локальная область видимости


# print(z) # при этом вызов z выдает ошибку: name 'z' is not defined
# Фактически это происходит из-за того
# что мы пытаемся достать переменную из области видимости функции.
my_func(1, 2)
