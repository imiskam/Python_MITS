print('nonlocal')


def outer():
    x = 5
    print(f"outer: {x}")

    def inner():
        """
        оператор nonlocal ссылается на другое локальное пространство,
        которое стоит "выше уровнем", чем то, в котором такая переменная
        была объявлена
        """
        nonlocal x  # объявляя подобное, мы получаем доступ к x из функции outer()
        # таким образом мы получаем значение из другой локальной области видимости
        # и можем его изменять, добавлять и т.д. при необходимости
        print(f"inner: {x}")

    inner()


outer()
