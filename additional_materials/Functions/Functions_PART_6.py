import random

"""
В предыдущих примерах мы вызывали наши функции
give_sum() и give_minus()
передавая им определенные аргументы, однако
в наших функциях не определено, что будет возвращать такая функция, 
а точнее, какое значение (или значения) будут наши функции возвращать.

рассмотрим небольшой пример.
Для этого перейдем в Python Shell. и напишем следующую строку.

>>> len([1,2,3])
>>> 3 

Строка 14 - это результат работы нашей функции len(). Т.е.
это то значение, которое нам вернула функция.
Более того, давайте напишем следующее.

>>> len([1,2,3]) - 1
>>> 2

Мы видим, что наша функция len вернула результат в виде числа, при этом
с полученным числом мы можем проводить любые математические операции. 
Теперь, давайте создадим такой функционал для наших функций, который позволит
им возвращать значения, которые мы далее по программе сможем использовать.
"""


def give_sum(a, b):
    return a + b  # функция возвращает результат сложения a + b


def give_minus(a, b):
    return a - b  # функция возвращает результат a - b


num1 = 15
num2 = 10

# вызываем функции и подаем в них наши аргументы num1 и num2
give_sum(num1, num2)
give_minus(num1, num2)
# запускаем интерпритатор
# убеждаемся в том, что возвращаемые оператором return
# значения не вывелись в консоль.
"""
В целом, Вам необходимо привыкнуть, что print (т.е. вывод в консоль)
вы будете использовать крайне редко, а чаще - Вы будете работать именно
с результатами, которые возвращают ваши функции. 
В PyCharm вы не сможете сразу увидеть результат работы вашей функции, 
однако для того, чтобы посмотреть, что вернули ваши функции
вы можете применить функцию принт, передав в качестве аргументов
вызовы ваших функций с переданными в них аргументами
"""

print(give_sum(num1, num2))
print(give_minus(num1, num2))

"""
Кроме того, осознав, что функции возвращают конкретные значения, 
мы можем использовать их (значения) для сохранения в переменных
"""

ex1 = give_minus(num1, num2)  # 5
ex2 = give_sum(num1, num2)  # 25
print(ex1, ex2)
"""
таким образом мы получаем следующее:
переменная ex1 примет значение, которое вернулось в результате вызова функции give_minus
переменная ex2 примет значение, которое вернулось в результате вызова функции give_sum
"""
