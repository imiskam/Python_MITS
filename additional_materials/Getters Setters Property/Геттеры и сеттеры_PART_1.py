class Example:

    def __init__(self, x, y):
        # задаем инициализатор на получение
        # двух свойств x и y
        # указываем, что данные значения будут private
        self.__x = x
        self.__y = y


"""
Это пример по сути базового класса, в котором у нас есть инициализатор
и 2 динамических свойства x и y.
Мы с Вами знаем, что обращаться к данным свойствам из-вне мы не сможем
т.к. обращаться с данными свойствами можно только внутри класса

>>> print(example.__x)
<<< AttributeError: type object 'example' has no attribute '__x'
При попытке обращения мы получим ошибку о том, что такого атрибута
у нас попросту нет. 
Сейчас мы рассмотрим типичный пример инкапсулирования данных
"""
# print(example.__x)
