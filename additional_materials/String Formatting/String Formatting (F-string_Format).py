# Форматированные строки
# PEP 498 - справочные материалы по форматированию строк
name = 'Roman'
age = 18

"""
Для форматирования строк в Python предусмотрено 5 способов:

1. Конкатенация - процесс сложения (или склеивания) двух строк
print('belarus ' + 'my country')
>>> belarus my country

2. %-форматирование. Способ, пришедший в Python
из языка программирования C. Позволяет передавать значения
в строку через списки и кортежи, а также с помощью словаря. 
name = "Roman"
age = 25
print("Меня зовут %s. Мне %d лет." % (name, age))

3. Template-строки. Данный способ популярности не приобрел.
Он создавался как замена %-форматированию, однако увы. 
>>> from string import Template
>>> name = "Дмитрий"
>>> age = 25
>>> s = Template('Меня зовут $name. Мне $age лет.')
>>> print(s.substitute(name=name, age=age))

4. Форматирование с помощью метода format()
name = 'Roman'
age = 29
string_ = "Меня зовут {name}, мне {age} лет".format(name=name, age=age)

5. f-строка.
name = 'Roman'
age = 29
string_ = f"Меня зовут {name}, мне {age} лет"
"""

"""
Начиная с Python 3.6 и выше форматирование строк производится следующим образом
"""

name = 'Roman'
age = 27
print(f"My name is {name}, {age} y.o.")

"""
Примечательно, что к указанным в фигурных скобках переменным
можно применять строчные методы, т.е.
"""
print(f"My name is {name.upper()}, {age ** 2} y.o.")
print(f"Длина строки name: {len(name)}")


