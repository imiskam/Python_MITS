import random
import math


# Задание 1
# Написать функцию, которая определяет количество разрядов
# введенного целого числа.

def count_digit(num):  # определить функцию, которая принимает один параметр num
    i = 0  # создать счетчик для прогона цикла, который при этом будет считать количество разрядов
    while num > 0:  # пока num будет больше нуля
        num = num // 10  # целочисленное деление на 10 от введенного числа будет записываться в переменную num
        i += 1  # после этого начнется новая итерация цикла, пока целочисленное деление на 10 последнего разряда не даст 0
    return i  # после завершения цикла функция вернет количество разрядов


num = int(input("Введите число для определения его разряда: "))
print(f"Количество разрядов введенного числа = {count_digit(num)}")


################################################################

# Задание 2
# В зависимости от выбора пользователя вычислить площадь
# круга, прямоугольника или треугольника. Для вычисления
# площади каждой фигуры должна быть написана отдельная функция.

def calculate_circle_area(radius):  # функция принимает только радиус
    return math.pi * radius ** 2


def calculate_rectangle_area(side1, side2):  # функция принимает две стороны прямоугольника
    return side1 * side2


def calculate_triangle_area(side1, side2, side3):  # функция принимает три стороны треугольника
    p = (side1 + side2 + side3) / 2
    return math.sqrt(p * (p - side1) * (p - side2) * (p - side3))  # формула Герона


# функции вызываются в зависимости от пользовательского ввода, функциям передаются аргументы и их результат выводится на печать
user_choice = input("Площадь чего вы хотите расчитать? (круг, прямоугольник, треугольник): ")
if user_choice == "круг":
    radius = int(input("Введите радиус круга: "))
    print(calculate_circle_area(radius))
elif user_choice == "прямоугольник":
    side1 = int(input("Введите сторону 1: "))
    side2 = int(input("Введите сторону 2: "))
    print(calculate_rectangle_area(side1, side2))
elif user_choice == "треугольник":
    side1 = int(input("Введите сторону 1: "))
    side2 = int(input("Введите сторону 2: "))
    side3 = int(input("Введите сторону 3: "))
    print(calculate_triangle_area(side1, side2, side3))
else:
    print("Введено неверное значение!")


################################################################

# Задание 3
# Написать функцию, которая заполняет массив длинной 10
# элементов, случайными числами в диапазоне, указанном
# пользователем с клавиатуры. Функция должна принимать два аргумента –
# начало диапазона и его конец, при этом ничего не возвращать.

def create_random_list(start, end):
    list_ = [0] * 10  # ноль в списке дублируется 10 раз, получаем 10 элементов в списке
    for i in range(len(list_)):  # диапазон range = длине списка
        list_[i] = random.randint(start,
                                  end)  # каждому элементу в списке присваивается случайное значение в заданных пользователем пределах
    print(list_)


start = int(input("Введите начало диапазона: "))
end = int(input("Введите конец диапазона: "))
create_random_list(start, end)


################################################################

# Задание 4
# Написать функцию и сделать так, чтобы число секунд
# отображалось в виде дни:часы:минуты:секунды.

def calculate_time(seconds):
    days = seconds // 86400
    seconds %= 86400
    hours = seconds // 3600
    seconds %= 3600
    minutes = seconds // 60  # считаем количество минут, напр. 90 сек // 60 = 1
    seconds %= 60  # остаток от 90 сек = 30 сек. такая же логика выше с часами и днями
    print(days, hours, minutes, seconds, sep=":")


seconds = int(input("Введите количество секунд: "))
calculate_time(seconds)


################################################################

# Задание 5
# Написать функцию, которая считает сколько гласных и согласных
# в строке. Строку вводить с клавиатуры..
def calculate_vowels_and_consonants(str_):
    vowels = "aeiouAEIOUауоыэяюёиеАУОЫЭЯЮЁИЕ"
    vowels_count_in_str = 0
    consonants = "bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZбвгджзйклмнпрстфхцчшщБВГДЖЗЙКЛМНПРСТФХЦЧШЩ"
    consonants_count_in_str = 0
    for i in str_:
        if i in vowels:  # если элемент в строке в пределах заданного списка гласных
            vowels_count_in_str += 1  # прибавляем к гласным +1
        elif i in consonants:  # если элемент в строке в пределах заданного списка согласных
            consonants_count_in_str += 1  # прибавляем к согласным +1
    print(f"Гласных: {vowels_count_in_str}, Согласных: {consonants_count_in_str}")


str_ = input("Введите строку: ")
calculate_vowels_and_consonants(str_)


################################################################

# Задание 6
# Написать функцию которая при заданном целом числе n
# посчитает n + nn + nnn.

def calculate_nums(n):
    num1 = n
    num2 = n ** 2
    num3 = n ** 3
    print("Результат вычисления:", num1 + num2 + num3)


calculate_nums(2)


################################################################

# Задание 7
# Вычислить значения нижеприведенной функции в диапазоне значений х от - 10 до 10 включительно с шагом, равным 1.
# y = x^2 при -5 <= x <= 5
# y = 2*|x|-1 при x < -5
# y = 2x при x > 5
# Вычисление значения функции оформить в виде программной функции, которая принимает значения x,
# а возвращает полученное значение функции y

def function(x):
    if -5 <= x <= 5:
        return x ** 2
    elif x < -5:
        return 2 * abs(x) - 1
    elif x > 5:
        return 2 * x


print(function(5))


################################################################

# Домашнее задание 1
# Если в функцию передаётся кортеж, то посчитать длину всех его слов.
# Если список, то посчитать кол-во букв и чисел в нём.
# Число – кол-во нечётных цифр.
# Строка – кол-во букв.
# Сделать проверку со всеми этими случаями.

def function(something):
    # Если в функцию передаётся кортеж, то посчитать длину всех его слов.
    if type(something) is tuple:  # проверки заданы по типу (кортеж, список, число, строка)
        word_length = 0
        for i in something:
            word_length += len(i)  # к изначальной длине слов (0) прибавляется результат выполнения функции len(элемента)
        # попробовал второй вариант с генераторами:
        # word_length = sum(len(i) for i in something)
        print("Длина всех слов кортежа:", word_length)

    # Если список, то посчитать кол-во букв и чисел в нём.
    elif type(something) is list:
        letters_count = 0
        digits_count = 0
        for i in something:
            if isinstance(i, str):  # если объект списка - строка, выполняются проверки на наличие букв и цифр в строковом объекте
                for j in i:
                    if j.isalpha():
                        letters_count += 1
                for j in i:
                    if j.isdigit():
                        digits_count += 1
                # второй вариант с генераторами:
                # letters_count += sum(1 for j in i if j.isalpha())
                # digits_count += sum(1 for j in i if j.isdigit())
            elif isinstance(i, int):  # если объект списка - число, выполняются проверки на наличие цифр в числовом объекте
                digits_count += len(str(i))
        print("Букв в списке: ", letters_count)
        print("Цифр в списке: ", digits_count)

    # Число – кол-во нечётных цифр.
    elif type(something) is int:
        odd_count = 0
        for i in range(something + 1):
            if i % 2 != 0:
                odd_count += 1
        print("Количество нечетных цифр:", odd_count)
    # Строка – кол-во букв.

    elif type(something) is str:
        letters_count = 0
        for i in something:
            if i.isalpha():
                letters_count += 1
        print("Количество букв в строке:", letters_count)


function(["привет 1", "привет 2", 123])  # вызов функции. список из строк и чисел оставлен для примера
